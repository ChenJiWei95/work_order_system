<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
	<!-- 加载配置文件 -->
	<context:property-placeholder location="classpath*:/config/config.properties"
		ignore-resource-not-found="true" ignore-unresolvable="true" />
	
	<!-- 数据源：DriverManagerDataSource -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${mybatis.jdbc.driver}" />
		<property name="url" value="${mybatis.jdbc.jdbcUrl}"/>
		<property name="username" value="${mybatis.jdbc.username}"/>
		<property name="password" value="${mybatis.jdbc.password}"/>
	</bean>
	
	<!-- 
		2. mybatis的SqlSession的工厂：SqlSessionFactoryBean dataSource:引用数据源
		MyBatis定义数据源，同意加载配置
	 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:config/mybatis-config.xml" />
	</bean>
	
	<!-- 3.mybatis自动扫描加载Sql映射文件、接口：MapperScannerConfigurer sqlSessionFactory
	basePackage：指定sql映射文件、接口所在的包（自动扫描） -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.mapper" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
	
	<!-- 4.事务管理：DataSourceTransactionManager dataSource： 引用上面定义的 数据源 -->
	<bean id="txManager" 
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<!-- 5.使用声明式事务 
		在Spring配置文件之中，还需要加入以下配置通知Spring容器，并且对注解@Transactional的Bean处理
	-->
	<tx:annotation-driven transaction-manager="txManager"/>
	
	<!-- 支持国际化 解析器 -->
	<!-- 默认语言 -->
	<bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.FixedLocaleResolver">
		<property name="defaultLocale" value="${locale}" />
	</bean>
	
</beans>
